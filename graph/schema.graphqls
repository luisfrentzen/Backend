# GraphQL schema example
#
# https://gqlgen.com/getting-started/
type User {
  id: String!
  name: String!
  profilepic: String!
  premium: String!
}

type Video {
  id: ID!
  url: String!
  title: String!
  thumbnail: String!
  restriction: String!
  desc: String!
  category: String!
  playlist: String!
  visibility: String!
  location: String!
  userid: String!
  like: Int!
  disilike: Int!
  view: Int!
  channelpic: String!
  channelname: String!
  day: Int!
  month: Int!
  year: Int!
}

type Playlist {
  id: ID!
  title: String!
  userid: String!
  visibility: String!
  day: Int!
  month: Int!
  year: Int!
  view: Int!
  desc: String!
  videos: String!
}

type Query {
  users: [User!]!
  videos: [Video!]!
  playlists: [Playlist!]!
  playlistsByUser(userid: String!): [Playlist!]!
  videosByUser(userid: String!): [Video!]!
  videosByCategory(category: String!): [Video!]!
  userById(userid: String!): [User!]!
  videoById(id: Int!): [Video!]!
}

input newUser {
  id: String!
  name: String!
  profilepic: String!
  premium: String!
}

input newPlaylist {
  title: String!
  userid: String!
  visibility: String!
  day: Int!
  month: Int!
  year: Int!
  view: Int!
  desc: String!
  videos: String!
}

input newVideo {
  url: String!
  title: String!
  thumbnail: String!
  restriction: String!
  desc: String!
  category: String!
  playlist: String!
  visibility: String!
  location: String!
  userid: String!
  like: Int!
  disilike: Int!
  view: Int!
  channelpic: String!
  channelname: String!
  day: Int!
  month: Int!
  year: Int!
}

type Mutation {
  createUser (input: newUser): User!
  updateUser (id: ID!, input: newUser): User!
  deleteUser (id: ID!): Boolean!

  createVideo (input: newVideo): Video!
  updateVideo (id: ID!, input: newVideo): Video!
  deleteVideo (id: ID!): Boolean!

  createPlaylist (input: newPlaylist): Playlist!
  updatePlaylist (id: ID!, input: newPlaylist): Playlist!
}
