# GraphQL schema example
#
# https://gqlgen.com/getting-started/
type User {
  id: String!
  name: String!
  profilepic: String!
  premium: String!
  likedvideos: String!
  disilikedvideos: String!
  likedcomments: String!
  disilikedcomments: String!
  subscribed: String!
  subscribers: Int!
  likedpost: String!
  disilikedpost: String!
  about: String!
  channelart: String!
  day: Int!
  month: Int!
  year: Int!
  premiday: Int!
  premimonth: Int!
  premiyear: Int!
  premitype: String!
  archivedplaylists: String!
}

type Post {
  id: ID!
  userid: String!
  like: Int!
  disilike: Int!
  desc: String!
  attachment: String!
  day: Int!
  month: Int!
  year: Int!
}

input newPost {
  userid: String!
  like: Int!
  disilike: Int!
  desc: String!
  attachment: String!
  day: Int!
  month: Int!
  year: Int!
}

type Video {
  id: ID!
  url: String!
  title: String!
  thumbnail: String!
  restriction: String!
  desc: String!
  category: String!
  visibility: String!
  location: String!
  userid: String!
  like: Int!
  disilike: Int!
  view: Int!
  channelpic: String!
  channelname: String!
  day: Int!
  month: Int!
  year: Int!
  duration: Int!
  premium: String!
}

type Link {
  id: ID!
  label: String!
  url: String!
  userid: String!
}

input newLink {
    label: String!
    url: String!
    userid: String!
}

type Playlist {
  id: ID!
  title: String!
  userid: String!
  visibility: String!
  day: Int!
  month: Int!
  year: Int!
  view: Int!
  desc: String!
  videos: String!
}

type Comment {
  id: ID!
  userid: String!
  like: Int!
  disilike: Int!
  replyto: Int!
  desc: String!
  videoid: Int!
  day: Int!
  month: Int!
  year: Int!
  replycount: Int!
  postid: Int!
}

input newComment {
  userid: String!
  like: Int!
  disilike: Int!
  replyto: Int!
  desc: String!
  videoid: Int!
  day: Int!
  month: Int!
  year: Int!
  replycount: Int!
  postid: Int!
}

type Notification {
  id: ID!
  userid: String!
  vidthm: String!
  title: String!
}

input newNotification {
  userid: String!
  vidthm: String!
  title: String!
}

type Query {
  notifications : [Notification!]!
  postByUser(userid: String!): [Post!]!
  postById(id: Int!): Post!
  commentByPost(id: Int!): [Comment!]!
  linkByUser(userid: String!): [Link!]!
  users: [User!]!
  videos(sort: String!, filter: String!, premium: String!): [Video!]!
  comments: [Comment!]!
  commentsByVideo(videoid: Int!, sort: String!): [Comment!]!
  replies(replyto: Int!): [Comment!]!
  playlists: [Playlist!]!
  playlistsByUser(userid: String!, visibility: String!): [Playlist!]!
  videosByUser(userid: String!, sort: String!, premium: String!, privacy: String!): [Video!]!
  videosByCategory(category: String!, sortBy: String!, premi: String!): [Video!]!
  userById(userid: String!): [User!]!
  videoById(id: Int!): [Video!]!
  playlistById(id: Int!): [Playlist!]!
  videosByIds(id: String!): [Video!]!
  commentById(id: Int!): [Comment!]!

  videosByUsers(id: String!, premium: String!): [Video!]!

  usersByIds(id: String!): [User!]!

  getArchivedPlaylist(ids: String!): [Playlist!]!

  searchPlaylist(kword: String!): [Playlist!]!
  searchVideo(kword: String!): [Video!]!
  searchChannel(kword: String!): [User!]!

  autocomplete(kword: String!): [String!]!
}

input newUser {
  id: String!
  name: String!
  profilepic: String!
  premium: String!
  likedvideos: String!
  disilikedvideos: String!
  likedcomments: String!
  disilikedcomments: String!
  subscribed: String!
  subscribers: Int!
  likedpost: String!
  disilikedpost: String!
  about: String!
  channelart: String!
  day: Int!
  month: Int!
  year: Int!
  premiday: Int!
  premimonth: Int!
  premiyear: Int!
  premitype: String!
  archivedplaylists: String!
}

input newPlaylist {
  title: String!
  userid: String!
  visibility: String!
  day: Int!
  month: Int!
  year: Int!
  view: Int!
  desc: String!
  videos: String!
}

input addToPlaylist {
  videos: String!
}

input newVideo {
  url: String!
  title: String!
  thumbnail: String!
  restriction: String!
  desc: String!
  category: String!
  visibility: String!
  location: String!
  userid: String!
  like: Int!
  disilike: Int!
  view: Int!
  channelpic: String!
  channelname: String!
  day: Int!
  month: Int!
  year: Int!
  duration: Int!
  premium: String!
}

type Mutation {
  shuffleVideos(plid: ID!): Playlist!
  createLink (input: newLink): Link!

  createPost (input: newPost): Post!
  createNotif (input: newNotification): Notification!

  createUser (input: newUser): User!
  updateUser (id: ID!, input: newUser): User!
  deleteUser (id: ID!): Boolean!

  createVideo (input: newVideo): Video!
  updateVideo (id: ID!, input: newVideo): Video!
  deleteVideo (id: ID!): Boolean!

  createComment (input: newComment): Comment!

  createPlaylist (input: newPlaylist): Playlist!
  updatePlaylist (id: ID!, input: newPlaylist): Playlist!
  addToPlaylist (id: ID!, input: addToPlaylist): Playlist!
  removeFromPlaylist (id: ID!, videoid: Int!): Playlist!
  removeAllFromPlaylist (id: ID!): Playlist!
  editPlaylist(id: ID!, title: String!, visibility: String!, desc: String!): Playlist!

  viewVideo (id: ID!): Video!
  viewPlaylist (id: ID!): Playlist!

  makeUserPremium(id: String!, subType:String!): User!

  subscribe (id: String!, chnid: String!): User!
  likevid (id: String!, chnid: String!): User!
  disilikevid (id: String!, chnid: String!): User!
  likecom (id: String!, chnid: String!): User!
  disilikecom (id: String!, chnid: String!): User!
  likepost (id: String!, chnid: String!): User!
  disilikepost (id: String!, chnid: String!): User!

  archiveplaylist(id: String!, plid: ID!): User!
  removearchivedplaylist(id: String!, plid: ID!): User!

  editAbout (id: String!, about: String!): User!
  updateLink (id: Int!, label: String!, url: String!): Link!
  deleteLink (id: Int!): Boolean!

  deletePost (id: Int!): Boolean!
  updatePost (id: Int!, desc: String!): Post!
  deletePlaylist(id: Int!): Boolean!
  updatePlaylistSort(id: Int!, videos: String!): Playlist!
  updateprofilepic (id: String!, profilepic: String!): User!
  updatechannelart (id: String!, channelart: String!): User!

}
