# GraphQL schema example
#
# https://gqlgen.com/getting-started/
type User {
  id: String!
  name: String!
  profilepic: String!
  premium: String!
  likedvideos: String!
  disilikedvideos: String!
  likedcomments: String!
  disilikedcomments: String!
  subscribed: String!
  subscribers: Int!
  likedpost: String!
  disilikedpost: String!
  about: String!
  channelart: String!
  day: Int!
  month: Int!
  year: Int!
}

type Post {
  id: ID!
  userid: String!
  like: Int!
  disilike: Int!
  desc: String!
  attachment: String!
  day: Int!
  month: Int!
  year: Int!
}

input newPost {
  userid: String!
  like: Int!
  disilike: Int!
  desc: String!
  attachment: String!
  day: Int!
  month: Int!
  year: Int!
}

type Video {
  id: ID!
  url: String!
  title: String!
  thumbnail: String!
  restriction: String!
  desc: String!
  category: String!
  visibility: String!
  location: String!
  userid: String!
  like: Int!
  disilike: Int!
  view: Int!
  channelpic: String!
  channelname: String!
  day: Int!
  month: Int!
  year: Int!
}

type Link {
  id: ID!
  label: String!
  url: String!
  userid: String!
}

input newLink {
    label: String!
    url: String!
    userid: String!
}

type Playlist {
  id: ID!
  title: String!
  userid: String!
  visibility: String!
  day: Int!
  month: Int!
  year: Int!
  view: Int!
  desc: String!
  videos: String!
}

type Comment {
  id: ID!
  userid: String!
  like: Int!
  disilike: Int!
  replyto: Int!
  desc: String!
  videoid: Int!
  day: Int!
  month: Int!
  year: Int!
  replycount: Int!
  postid: Int!
}

input newComment {
  userid: String!
  like: Int!
  disilike: Int!
  replyto: Int!
  desc: String!
  videoid: Int!
  day: Int!
  month: Int!
  year: Int!
  replycount: Int!
  postid: Int!
}

type Query {
  postByUser(userid: String!): [Post!]!
  commentByPost(id: Int!): [Comment!]!
  linkByUser(userid: String!): [Link!]!
  users: [User!]!
  videos: [Video!]!
  comments: [Comment!]!
  commentsByVideo(videoid: Int!): [Comment!]!
  replies(replyto: Int!): [Comment!]!
  playlists: [Playlist!]!
  playlistsByUser(userid: String!): [Playlist!]!
  videosByUser(userid: String!): [Video!]!
  videosByCategory(category: String!): [Video!]!
  userById(userid: String!): [User!]!
  videoById(id: Int!): [Video!]!
  playlistById(id: Int!): [Playlist!]!
  videosByIds(id: String!): [Video!]!
  commentById(id: Int!): [Comment!]!
}

input newUser {
  id: String!
  name: String!
  profilepic: String!
  premium: String!
  likedvideos: String!
  disilikedvideos: String!
  likedcomments: String!
  disilikedcomments: String!
  subscribed: String!
  subscribers: Int!
  likedpost: String!
  disilikedpost: String!
  about: String!
  channelart: String!
  day: Int!
  month: Int!
  year: Int!
}

input newPlaylist {
  title: String!
  userid: String!
  visibility: String!
  day: Int!
  month: Int!
  year: Int!
  view: Int!
  desc: String!
  videos: String!
}

input addToPlaylist {
  videos: String!
}

input newVideo {
  url: String!
  title: String!
  thumbnail: String!
  restriction: String!
  desc: String!
  category: String!
  visibility: String!
  location: String!
  userid: String!
  like: Int!
  disilike: Int!
  view: Int!
  channelpic: String!
  channelname: String!
  day: Int!
  month: Int!
  year: Int!
}

type Mutation {
  createLink (input: newLink): Link!

  createPost (input: newPost): Post!

  createUser (input: newUser): User!
  updateUser (id: ID!, input: newUser): User!
  deleteUser (id: ID!): Boolean!

  createVideo (input: newVideo): Video!
  updateVideo (id: ID!, input: newVideo): Video!
  deleteVideo (id: ID!): Boolean!

  createComment (input: newComment): Comment!

  createPlaylist (input: newPlaylist): Playlist!
  updatePlaylist (id: ID!, input: newPlaylist): Playlist!
  addToPlaylist (id: ID!, input: addToPlaylist): Playlist!

  subscribe (id: String!, chnid: String!): User!
  likevid (id: String!, chnid: String!): User!
  disilikevid (id: String!, chnid: String!): User!
  likecom (id: String!, chnid: String!): User!
  disilikecom (id: String!, chnid: String!): User!
  likepost (id: String!, chnid: String!): User!
  disilikepost (id: String!, chnid: String!): User!
}
